// automatically generated by Xtext
grammar knowledge.xtext.KnowDEECo with org.eclipse.xtext.common.Terminals

import "platform:/resource/knowledge.model/model/Knowledge.ecore" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

DEECoModel returns DEECoModel:
	{DEECoModel}
	'DEECoModel'
	'{'
		('elements' '{' elements+=AbstractElement ( "," elements+=AbstractElement)* '}' )?
		('knowledges' '{' knowledges+=AbstractKnowledge ( "," knowledges+=AbstractKnowledge)* '}' )?
	'}';

AbstractElement returns AbstractElement:
	Ensemble | Process;

AbstractKnowledge returns AbstractKnowledge:
	KnowledgeElement | Leaf;

KnowledgeNode returns KnowledgeNode:
	KnowledgeElement | Leaf;

EString returns ecore::EString:
	STRING | ID;

EInt returns ecore::EInt:
	'-'? INT;

Ensemble returns Ensemble:
	{Ensemble}
	'Ensemble'
	name=EString
	'{'
		('period' period=EInt)?
	'}';

Process returns Process:
	{Process}
	'Process'
	name=EString
	'{'
		('period' period=EInt)?
	'}';

KnowledgeElement returns KnowledgeElement:
	'KnowledgeElement'
	name=EString
	'{'
		('reader' '(' reader+=[AbstractElement|EString] ( "," reader+=[AbstractElement|EString])* ')' )?
		'child' '{' child+=KnowledgeNode ( "," child+=KnowledgeNode)* '}' 
	'}';

Leaf returns Leaf:
	{Leaf}
	'Leaf'
	name=EString
	'{'
		('type' type=EString)?
		('reader' '(' reader+=[AbstractElement|EString] ( "," reader+=[AbstractElement|EString])* ')' )?
		('writer' writer=[AbstractElement|EString])?
	'}';
