/*
* generated by Xtext
*/
grammar InternalKnowDEECo;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package knowledge.xtext.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package knowledge.xtext.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import knowledge.xtext.services.KnowDEECoGrammarAccess;

}

@parser::members {

 	private KnowDEECoGrammarAccess grammarAccess;
 	
    public InternalKnowDEECoParser(TokenStream input, KnowDEECoGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "DEECoModel";	
   	}
   	
   	@Override
   	protected KnowDEECoGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleDEECoModel
entryRuleDEECoModel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDEECoModelRule()); }
	 iv_ruleDEECoModel=ruleDEECoModel 
	 { $current=$iv_ruleDEECoModel.current; } 
	 EOF 
;

// Rule DEECoModel
ruleDEECoModel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getDEECoModelAccess().getDEECoModelAction_0(),
            $current);
    }
)	otherlv_1='DEECoModel' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDEECoModelAccess().getDEECoModelKeyword_1());
    }
	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDEECoModelAccess().getLeftCurlyBracketKeyword_2());
    }
(	otherlv_3='elements' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDEECoModelAccess().getElementsKeyword_3_0());
    }
	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getDEECoModelAccess().getLeftCurlyBracketKeyword_3_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDEECoModelAccess().getElementsAbstractElementParserRuleCall_3_2_0()); 
	    }
		lv_elements_5_0=ruleAbstractElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDEECoModelRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_5_0, 
        		"AbstractElement");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getDEECoModelAccess().getCommaKeyword_3_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDEECoModelAccess().getElementsAbstractElementParserRuleCall_3_3_1_0()); 
	    }
		lv_elements_7_0=ruleAbstractElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDEECoModelRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_7_0, 
        		"AbstractElement");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getDEECoModelAccess().getRightCurlyBracketKeyword_3_4());
    }
)?(	otherlv_9='knowledges' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getDEECoModelAccess().getKnowledgesKeyword_4_0());
    }
	otherlv_10='{' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getDEECoModelAccess().getLeftCurlyBracketKeyword_4_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDEECoModelAccess().getKnowledgesAbstractKnowledgeParserRuleCall_4_2_0()); 
	    }
		lv_knowledges_11_0=ruleAbstractKnowledge		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDEECoModelRule());
	        }
       		add(
       			$current, 
       			"knowledges",
        		lv_knowledges_11_0, 
        		"AbstractKnowledge");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_12=',' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getDEECoModelAccess().getCommaKeyword_4_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDEECoModelAccess().getKnowledgesAbstractKnowledgeParserRuleCall_4_3_1_0()); 
	    }
		lv_knowledges_13_0=ruleAbstractKnowledge		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDEECoModelRule());
	        }
       		add(
       			$current, 
       			"knowledges",
        		lv_knowledges_13_0, 
        		"AbstractKnowledge");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_14='}' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getDEECoModelAccess().getRightCurlyBracketKeyword_4_4());
    }
)?	otherlv_15='}' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getDEECoModelAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleAbstractElement
entryRuleAbstractElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAbstractElementRule()); }
	 iv_ruleAbstractElement=ruleAbstractElement 
	 { $current=$iv_ruleAbstractElement.current; } 
	 EOF 
;

// Rule AbstractElement
ruleAbstractElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getAbstractElementAccess().getEnsembleParserRuleCall_0()); 
    }
    this_Ensemble_0=ruleEnsemble
    { 
        $current = $this_Ensemble_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAbstractElementAccess().getProcessParserRuleCall_1()); 
    }
    this_Process_1=ruleProcess
    { 
        $current = $this_Process_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleAbstractKnowledge
entryRuleAbstractKnowledge returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAbstractKnowledgeRule()); }
	 iv_ruleAbstractKnowledge=ruleAbstractKnowledge 
	 { $current=$iv_ruleAbstractKnowledge.current; } 
	 EOF 
;

// Rule AbstractKnowledge
ruleAbstractKnowledge returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getAbstractKnowledgeAccess().getKnowledgeElementParserRuleCall_0()); 
    }
    this_KnowledgeElement_0=ruleKnowledgeElement
    { 
        $current = $this_KnowledgeElement_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAbstractKnowledgeAccess().getLeafParserRuleCall_1()); 
    }
    this_Leaf_1=ruleLeaf
    { 
        $current = $this_Leaf_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleKnowledgeNode
entryRuleKnowledgeNode returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getKnowledgeNodeRule()); }
	 iv_ruleKnowledgeNode=ruleKnowledgeNode 
	 { $current=$iv_ruleKnowledgeNode.current; } 
	 EOF 
;

// Rule KnowledgeNode
ruleKnowledgeNode returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getKnowledgeNodeAccess().getKnowledgeElementParserRuleCall_0()); 
    }
    this_KnowledgeElement_0=ruleKnowledgeElement
    { 
        $current = $this_KnowledgeElement_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getKnowledgeNodeAccess().getLeafParserRuleCall_1()); 
    }
    this_Leaf_1=ruleLeaf
    { 
        $current = $this_Leaf_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleEString
entryRuleEString returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getEStringRule()); } 
	 iv_ruleEString=ruleEString 
	 { $current=$iv_ruleEString.current.getText(); }  
	 EOF 
;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_STRING_0=RULE_STRING    {
		$current.merge(this_STRING_0);
    }

    { 
    newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); 
    }

    |    this_ID_1=RULE_ID    {
		$current.merge(this_ID_1);
    }

    { 
    newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); 
    }
)
    ;





// Entry rule entryRuleEInt
entryRuleEInt returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getEIntRule()); } 
	 iv_ruleEInt=ruleEInt 
	 { $current=$iv_ruleEInt.current.getText(); }  
	 EOF 
;

// Rule EInt
ruleEInt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getEIntAccess().getHyphenMinusKeyword_0()); 
    }
)?    this_INT_1=RULE_INT    {
		$current.merge(this_INT_1);
    }

    { 
    newLeafNode(this_INT_1, grammarAccess.getEIntAccess().getINTTerminalRuleCall_1()); 
    }
)
    ;





// Entry rule entryRuleEnsemble
entryRuleEnsemble returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEnsembleRule()); }
	 iv_ruleEnsemble=ruleEnsemble 
	 { $current=$iv_ruleEnsemble.current; } 
	 EOF 
;

// Rule Ensemble
ruleEnsemble returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getEnsembleAccess().getEnsembleAction_0(),
            $current);
    }
)	otherlv_1='Ensemble' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getEnsembleAccess().getEnsembleKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEnsembleAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnsembleRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getEnsembleAccess().getLeftCurlyBracketKeyword_3());
    }
(	otherlv_4='period' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getEnsembleAccess().getPeriodKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEnsembleAccess().getPeriodEIntParserRuleCall_4_1_0()); 
	    }
		lv_period_5_0=ruleEInt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnsembleRule());
	        }
       		set(
       			$current, 
       			"period",
        		lv_period_5_0, 
        		"EInt");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getEnsembleAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleProcess
entryRuleProcess returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getProcessRule()); }
	 iv_ruleProcess=ruleProcess 
	 { $current=$iv_ruleProcess.current; } 
	 EOF 
;

// Rule Process
ruleProcess returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getProcessAccess().getProcessAction_0(),
            $current);
    }
)	otherlv_1='Process' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getProcessAccess().getProcessKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getProcessAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProcessRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getProcessAccess().getLeftCurlyBracketKeyword_3());
    }
(	otherlv_4='period' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getProcessAccess().getPeriodKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getProcessAccess().getPeriodEIntParserRuleCall_4_1_0()); 
	    }
		lv_period_5_0=ruleEInt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProcessRule());
	        }
       		set(
       			$current, 
       			"period",
        		lv_period_5_0, 
        		"EInt");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getProcessAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleKnowledgeElement
entryRuleKnowledgeElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getKnowledgeElementRule()); }
	 iv_ruleKnowledgeElement=ruleKnowledgeElement 
	 { $current=$iv_ruleKnowledgeElement.current; } 
	 EOF 
;

// Rule KnowledgeElement
ruleKnowledgeElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='KnowledgeElement' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getKnowledgeElementAccess().getKnowledgeElementKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getKnowledgeElementAccess().getNameEStringParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getKnowledgeElementRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getKnowledgeElementAccess().getLeftCurlyBracketKeyword_2());
    }
(	otherlv_3='reader' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getKnowledgeElementAccess().getReaderKeyword_3_0());
    }
	otherlv_4='(' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getKnowledgeElementAccess().getLeftParenthesisKeyword_3_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getKnowledgeElementRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getKnowledgeElementAccess().getReaderAbstractElementCrossReference_3_2_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getKnowledgeElementAccess().getCommaKeyword_3_3_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getKnowledgeElementRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getKnowledgeElementAccess().getReaderAbstractElementCrossReference_3_3_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_8=')' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getKnowledgeElementAccess().getRightParenthesisKeyword_3_4());
    }
)?	otherlv_9='child' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getKnowledgeElementAccess().getChildKeyword_4());
    }
	otherlv_10='{' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getKnowledgeElementAccess().getLeftCurlyBracketKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getKnowledgeElementAccess().getChildKnowledgeNodeParserRuleCall_6_0()); 
	    }
		lv_child_11_0=ruleKnowledgeNode		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getKnowledgeElementRule());
	        }
       		add(
       			$current, 
       			"child",
        		lv_child_11_0, 
        		"KnowledgeNode");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_12=',' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getKnowledgeElementAccess().getCommaKeyword_7_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getKnowledgeElementAccess().getChildKnowledgeNodeParserRuleCall_7_1_0()); 
	    }
		lv_child_13_0=ruleKnowledgeNode		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getKnowledgeElementRule());
	        }
       		add(
       			$current, 
       			"child",
        		lv_child_13_0, 
        		"KnowledgeNode");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_14='}' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getKnowledgeElementAccess().getRightCurlyBracketKeyword_8());
    }
	otherlv_15='}' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getKnowledgeElementAccess().getRightCurlyBracketKeyword_9());
    }
)
;





// Entry rule entryRuleLeaf
entryRuleLeaf returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLeafRule()); }
	 iv_ruleLeaf=ruleLeaf 
	 { $current=$iv_ruleLeaf.current; } 
	 EOF 
;

// Rule Leaf
ruleLeaf returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getLeafAccess().getLeafAction_0(),
            $current);
    }
)	otherlv_1='Leaf' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getLeafAccess().getLeafKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLeafAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLeafRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getLeafAccess().getLeftCurlyBracketKeyword_3());
    }
(	otherlv_4='type' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getLeafAccess().getTypeKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLeafAccess().getTypeEStringParserRuleCall_4_1_0()); 
	    }
		lv_type_5_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLeafRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_5_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_6='reader' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getLeafAccess().getReaderKeyword_5_0());
    }
	otherlv_7='(' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getLeafAccess().getLeftParenthesisKeyword_5_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getLeafRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getLeafAccess().getReaderAbstractElementCrossReference_5_2_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_9=',' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getLeafAccess().getCommaKeyword_5_3_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getLeafRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getLeafAccess().getReaderAbstractElementCrossReference_5_3_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_11=')' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getLeafAccess().getRightParenthesisKeyword_5_4());
    }
)?(	otherlv_12='writer' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getLeafAccess().getWriterKeyword_6_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getLeafRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getLeafAccess().getWriterAbstractElementCrossReference_6_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_14='}' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getLeafAccess().getRightCurlyBracketKeyword_7());
    }
)
;





RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


